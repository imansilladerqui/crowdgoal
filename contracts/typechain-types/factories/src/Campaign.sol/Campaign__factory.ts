/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Campaign,
  CampaignInterface,
} from "../../../src/Campaign.sol/Campaign";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_goal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeRecipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "backer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Contributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "creatorAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "FundsClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "backer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Refunded",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE_DENOMINATOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEE_PERCENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "contribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contributions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStatus",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "goal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRaised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001eff38038062001eff8339818101604052810190620000379190620003e3565b4284116200007c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200007390620004ff565b60405180910390fd5b60008511620000c2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000b99062000571565b60405180910390fd5b856000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846001819055508360028190555082600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060059081620001a39190620007d4565b50505050505050620008bb565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001f182620001c4565b9050919050565b6200020381620001e4565b81146200020f57600080fd5b50565b6000815190506200022381620001f8565b92915050565b6000819050919050565b6200023e8162000229565b81146200024a57600080fd5b50565b6000815190506200025e8162000233565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002b9826200026e565b810181811067ffffffffffffffff82111715620002db57620002da6200027f565b5b80604052505050565b6000620002f0620001b0565b9050620002fe8282620002ae565b919050565b600067ffffffffffffffff8211156200032157620003206200027f565b5b6200032c826200026e565b9050602081019050919050565b60005b83811015620003595780820151818401526020810190506200033c565b60008484015250505050565b60006200037c620003768462000303565b620002e4565b9050828152602081018484840111156200039b576200039a62000269565b5b620003a884828562000339565b509392505050565b600082601f830112620003c857620003c762000264565b5b8151620003da84826020860162000365565b91505092915050565b60008060008060008060c08789031215620004035762000402620001ba565b5b60006200041389828a0162000212565b96505060206200042689828a016200024d565b95505060406200043989828a016200024d565b94505060606200044c89828a0162000212565b93505060806200045f89828a0162000212565b92505060a087015167ffffffffffffffff811115620004835762000482620001bf565b5b6200049189828a01620003b0565b9150509295509295509295565b600082825260208201905092915050565b7f446561646c696e65206d75737420626520696e20746865206675747572650000600082015250565b6000620004e7601e836200049e565b9150620004f482620004af565b602082019050919050565b600060208201905081810360008301526200051a81620004d8565b9050919050565b7f476f616c206d7573742062652067726561746572207468616e20300000000000600082015250565b600062000559601b836200049e565b9150620005668262000521565b602082019050919050565b600060208201905081810360008301526200058c816200054a565b9050919050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005e657607f821691505b602082108103620005fc57620005fb6200059e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006667fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000627565b62000672868362000627565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620006b5620006af620006a98462000229565b6200068a565b62000229565b9050919050565b6000819050919050565b620006d18362000694565b620006e9620006e082620006bc565b84845462000634565b825550505050565b600090565b62000700620006f1565b6200070d818484620006c6565b505050565b5b81811015620007355762000729600082620006f6565b60018101905062000713565b5050565b601f82111562000784576200074e8162000602565b620007598462000617565b8101602085101562000769578190505b62000781620007788562000617565b83018262000712565b50505b505050565b600082821c905092915050565b6000620007a96000198460080262000789565b1980831691505092915050565b6000620007c4838362000796565b9150826002028217905092915050565b620007df8262000593565b67ffffffffffffffff811115620007fb57620007fa6200027f565b5b620008078254620005cd565b6200081482828562000739565b600060209050601f8311600181146200084c576000841562000837578287015190505b620008438582620007b6565b865550620008b3565b601f1984166200085c8662000602565b60005b8281101562000886578489015182556001820191506020850194506020810190506200085f565b86831015620008a65784890151620008a2601f89168262000796565b8355505b6001600288020188555050505b505050505050565b61163480620008cb6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063590e1ae311610097578063d73792a911610066578063d73792a91461022c578063e834a8341461024a578063eaf98d2314610268578063fc0c546a14610286576100f5565b8063590e1ae3146101de578063ac307773146101e8578063c1cbbca7146101f2578063c5c4744c1461020e576100f5565b806340193883116100d3578063401938831461015457806342e94c901461017257806346904840146101a25780634e69d560146101c0576100f5565b806302d05d3f146100fa57806303ee438c1461011857806329dcb0cf14610136575b600080fd5b6101026102a4565b60405161010f9190610da3565b60405180910390f35b6101206102c8565b60405161012d9190610e4e565b60405180910390f35b61013e610356565b60405161014b9190610e89565b60405180910390f35b61015c61035c565b6040516101699190610e89565b60405180910390f35b61018c60048036038101906101879190610ed5565b610362565b6040516101999190610e89565b60405180910390f35b6101aa61037a565b6040516101b79190610da3565b60405180910390f35b6101c86103a0565b6040516101d59190610e4e565b60405180910390f35b6101e6610525565b005b6101f061076e565b005b61020c60048036038101906102079190610f2e565b610b2d565b005b610216610d17565b6040516102239190610e89565b60405180910390f35b610234610d1d565b6040516102419190610e89565b60405180910390f35b610252610d23565b60405161025f9190610f76565b60405180910390f35b610270610d36565b60405161027d9190610e89565b60405180910390f35b61028e610d3c565b60405161029b9190610da3565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600580546102d590610fc0565b80601f016020809104026020016040519081016040528092919081815260200182805461030190610fc0565b801561034e5780601f106103235761010080835404028352916020019161034e565b820191906000526020600020905b81548152906001019060200180831161033157829003601f168201915b505050505081565b60025481565b60015481565b60066020528060005260406000206000915090505481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600460149054906101000a900460ff16156103f4576040518060400160405280600781526020017f636c61696d6564000000000000000000000000000000000000000000000000008152509050610522565b600254421080156104085750600154600354105b1561044a576040518060400160405280600681526020017f61637469766500000000000000000000000000000000000000000000000000008152509050610522565b60015460035410610492576040518060400160405280600a81526020017f7375636365737366756c000000000000000000000000000000000000000000008152509050610522565b60025442101580156104a75750600154600354105b156104e9576040518060400160405280600681526020017f6661696c656400000000000000000000000000000000000000000000000000008152509050610522565b6040518060400160405280600781526020017f756e6b6e6f776e0000000000000000000000000000000000000000000000000081525090505b90565b60025442101561056a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105619061103d565b60405180910390fd5b600154600354106105b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a7906110a9565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610637576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062e90611115565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016106d9929190611135565b6020604051808303816000875af11580156106f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071c919061118a565b503373ffffffffffffffffffffffffffffffffffffffff167fd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651826040516107639190610e89565b60405180910390a250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f390611203565b60405180910390fd5b60025442101580610811575060015460035410155b610850576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084790611295565b60405180910390fd5b6001546003541015610897576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088e90611301565b60405180910390fd5b600460149054906101000a900460ff16156108e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108de9061136d565b60405180910390fd5b6001600460146101000a81548160ff021916908315150217905550600061271061012c60035461091791906113bc565b610921919061142d565b9050600081600354610933919061145e565b9050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016109b2929190611135565b6020604051808303816000875af11580156109d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f5919061118a565b50600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b8152600401610a75929190611135565b6020604051808303816000875af1158015610a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab8919061118a565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f4a928ee5d1397dcab0a17b6f9b1e4250d15c6bda472de38c65b38c38ff790d0c8284604051610b21929190611492565b60405180910390a25050565b6002544210610b71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6890611507565b60405180910390fd5b60008111610bb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bab90611573565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610c1393929190611593565b6020604051808303816000875af1158015610c32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c56919061118a565b5080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ca691906115ca565b925050819055508060036000828254610cbf91906115ca565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f62722348256371b5147820d6cad90c40fd2da1ccee18c3ed52c0bca5a61dbbab82604051610d0c9190610e89565b60405180910390a250565b60035481565b61271081565b600460149054906101000a900460ff1681565b61012c81565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d8d82610d62565b9050919050565b610d9d81610d82565b82525050565b6000602082019050610db86000830184610d94565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610df8578082015181840152602081019050610ddd565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e2082610dbe565b610e2a8185610dc9565b9350610e3a818560208601610dda565b610e4381610e04565b840191505092915050565b60006020820190508181036000830152610e688184610e15565b905092915050565b6000819050919050565b610e8381610e70565b82525050565b6000602082019050610e9e6000830184610e7a565b92915050565b600080fd5b610eb281610d82565b8114610ebd57600080fd5b50565b600081359050610ecf81610ea9565b92915050565b600060208284031215610eeb57610eea610ea4565b5b6000610ef984828501610ec0565b91505092915050565b610f0b81610e70565b8114610f1657600080fd5b50565b600081359050610f2881610f02565b92915050565b600060208284031215610f4457610f43610ea4565b5b6000610f5284828501610f19565b91505092915050565b60008115159050919050565b610f7081610f5b565b82525050565b6000602082019050610f8b6000830184610f67565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610fd857607f821691505b602082108103610feb57610fea610f91565b5b50919050565b7f43616d706169676e206e6f7420656e6465642079657400000000000000000000600082015250565b6000611027601683610dc9565b915061103282610ff1565b602082019050919050565b600060208201905081810360008301526110568161101a565b9050919050565b7f476f616c2077617320726561636865642c206e6f20726566756e647300000000600082015250565b6000611093601c83610dc9565b915061109e8261105d565b602082019050919050565b600060208201905081810360008301526110c281611086565b9050919050565b7f4e6f7468696e6720746f20726566756e64000000000000000000000000000000600082015250565b60006110ff601183610dc9565b915061110a826110c9565b602082019050919050565b6000602082019050818103600083015261112e816110f2565b9050919050565b600060408201905061114a6000830185610d94565b6111576020830184610e7a565b9392505050565b61116781610f5b565b811461117257600080fd5b50565b6000815190506111848161115e565b92915050565b6000602082840312156111a05761119f610ea4565b5b60006111ae84828501611175565b91505092915050565b7f4f6e6c792063726561746f722063616e20636c61696d00000000000000000000600082015250565b60006111ed601683610dc9565b91506111f8826111b7565b602082019050919050565b6000602082019050818103600083015261121c816111e0565b9050919050565b7f43616d706169676e206e6f7420656e646564206f7220676f616c206e6f74206d60008201527f6574000000000000000000000000000000000000000000000000000000000000602082015250565b600061127f602283610dc9565b915061128a82611223565b604082019050919050565b600060208201905081810360008301526112ae81611272565b9050919050565b7f476f616c206e6f74207265616368656400000000000000000000000000000000600082015250565b60006112eb601083610dc9565b91506112f6826112b5565b602082019050919050565b6000602082019050818103600083015261131a816112de565b9050919050565b7f46756e647320616c726561647920636c61696d65640000000000000000000000600082015250565b6000611357601583610dc9565b915061136282611321565b602082019050919050565b600060208201905081810360008301526113868161134a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113c782610e70565b91506113d283610e70565b92508282026113e081610e70565b915082820484148315176113f7576113f661138d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061143882610e70565b915061144383610e70565b925082611453576114526113fe565b5b828204905092915050565b600061146982610e70565b915061147483610e70565b925082820390508181111561148c5761148b61138d565b5b92915050565b60006040820190506114a76000830185610e7a565b6114b46020830184610e7a565b9392505050565b7f43616d706169676e20656e646564000000000000000000000000000000000000600082015250565b60006114f1600e83610dc9565b91506114fc826114bb565b602082019050919050565b60006020820190508181036000830152611520816114e4565b9050919050565b7f416d6f756e74206d757374206265203e20300000000000000000000000000000600082015250565b600061155d601283610dc9565b915061156882611527565b602082019050919050565b6000602082019050818103600083015261158c81611550565b9050919050565b60006060820190506115a86000830186610d94565b6115b56020830185610d94565b6115c26040830184610e7a565b949350505050565b60006115d582610e70565b91506115e083610e70565b92508282019050808211156115f8576115f761138d565b5b9291505056fea2646970667358221220316928cc8141b8c9f3c728ee719837fc47dbcd6d0bc1c36a987269fdd144d6d664736f6c63430008140033";

type CampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Campaign__factory extends ContractFactory {
  constructor(...args: CampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _creator: AddressLike,
    _goal: BigNumberish,
    _deadline: BigNumberish,
    _token: AddressLike,
    _feeRecipient: AddressLike,
    _metadataURI: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _creator,
      _goal,
      _deadline,
      _token,
      _feeRecipient,
      _metadataURI,
      overrides || {}
    );
  }
  override deploy(
    _creator: AddressLike,
    _goal: BigNumberish,
    _deadline: BigNumberish,
    _token: AddressLike,
    _feeRecipient: AddressLike,
    _metadataURI: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _creator,
      _goal,
      _deadline,
      _token,
      _feeRecipient,
      _metadataURI,
      overrides || {}
    ) as Promise<
      Campaign & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Campaign__factory {
    return super.connect(runner) as Campaign__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignInterface {
    return new Interface(_abi) as CampaignInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Campaign {
    return new Contract(address, _abi, runner) as unknown as Campaign;
  }
}
